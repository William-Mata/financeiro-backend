# .gitlab-ci.yml - VERSÃƒO FINAL CORRIGIDA
stages:
  - build
  - test
  - package
  - deploy

variables:
  DOTNET_VERSION: "8.0"
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: "/certs"
  IMAGE_TAG: "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA"

build:
  stage: build
  image: mcr.microsoft.com/dotnet/sdk:$DOTNET_VERSION
  script:
    - dotnet restore
    - dotnet build --configuration Release --no-restore
  artifacts:
    paths:
      - "**/bin/"
      - "**/obj/"
    expire_in: 1 hour
  tags:
    - docker

test:
  stage: test
  image: mcr.microsoft.com/dotnet/sdk:$DOTNET_VERSION
  dependencies:
    - build
  script:
    - dotnet test --configuration Release --no-build --verbosity normal
  tags:
    - docker

package:
  stage: package
  image: docker:24.0.5
  services:
    - docker:24.0.5-dind
  dependencies:
    - test
  before_script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
  script:
    - docker build -t $IMAGE_TAG .
    - docker push $IMAGE_TAG
  only:
    - main
  tags:
    - docker

deploy:
  stage: deploy
  image: alpine:latest
  dependencies:
    - package
  before_script:
    - apk add --no-cache openssh-client docker-cli
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -H $SERVER_HOST >> ~/.ssh/known_hosts
  script:
    - |
      ssh $SERVER_USER@$SERVER_HOST "
        cd /opt/minha-app &&
        echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY &&
        docker pull $IMAGE_TAG &&
        docker stop minha-app-api || true &&
        docker rm minha-app-api || true &&
        docker run -d --name minha-app-api -p 5000:8080 --restart unless-stopped $IMAGE_TAG &&
        docker system prune -f
      "
    # Verificar se deploy funcionou
    - sleep 10
    - ssh $SERVER_USER@$SERVER_HOST "curl -f http://localhost:5000/health"
  environment:
    name: production
    url: http://$SERVER_HOST:5000
  only:
    - main
  when: manual
  tags:
    - docker